plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.0'
  id 'io.spring.dependency-management' version '1.1.6'
  id 'com.netflix.dgs.codegen' version '6.2.1'
}

group = 'nh.springgraphql'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-graphql'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework:spring-webflux'
  testImplementation 'org.springframework.graphql:spring-graphql-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  implementation 'com.graphql-java:graphql-java-extended-scalars:19.0'
}

generateJava {
  schemaPaths = ["${rootProject.projectDir}/remote-service/src/main/resources/schema"]
  packageName = 'nh.graphqlexample.graphqlservice.clients.media'
  generateClient = true
}

tasks.named('test') {
  useJUnitPlatform()
}
